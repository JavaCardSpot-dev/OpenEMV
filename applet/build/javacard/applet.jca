// converted by version  [v3.0.4]
// on Sun Mar 11 05:22:44 IST 2018

.package applet {
	.aid 0x1:0x2:0x3:0x4:0x5:0x6:0x7:0x8:0x9;
	.version 0.1;

	.imports {
		0xA0:0x0:0x0:0x0:0x62:0x0:0x1 1.0;		//java/lang
		0xA0:0x0:0x0:0x0:0x62:0x1:0x1 1.5;		//javacard/framework
		0xA0:0x0:0x0:0x0:0x62:0x1:0x2 1.5;		//javacard/security
		0xA0:0x0:0x0:0x0:0x62:0x2:0x1 1.5;		//javacardx/crypto
	}

	.applet {
		0x1:0x2:0x3:0x4:0x5:0x6:0x7:0x8:0x9:0x1:0x2 SimpleEMVApplet;
	}

	.constantPool {
		// 0
		instanceFieldRef SimpleEMVApplet EMVCrypto/theApplet;
		// 1
		instanceFieldRef byte[] EMVCrypto/diversification_data;
		// 2
		instanceFieldRef byte[] EMVCrypto/sessionkey;
		// 3
		instanceFieldRef byte[] EMVCrypto/transaction_data;
		// 4
		instanceFieldRef 3.1 EMVCrypto/desCipher;
		// 5
		instanceFieldRef 2.15 EMVCrypto/desMAC;
		// 6
		instanceFieldRef 2.10 EMVCrypto/mk;
		// 7
		instanceFieldRef 2.10 EMVCrypto/sk;
		// 8
		instanceFieldRef EMVProtocolState SimpleEMVApplet/protocolState;
		// 9
		instanceFieldRef EMVStaticData SimpleEMVApplet/staticData;
		// 10
		instanceFieldRef byte[] EMVProtocolState/volatileState;
		// 11
		instanceFieldRef short EMVProtocolState/atc;
		// 12
		instanceFieldRef short EMVProtocolState/lastOnlineATC;
		// 13
		instanceFieldRef SimpleEMVApplet EMVProtocolState/theApplet;
		// 14
		instanceFieldRef byte[] EMVProtocolState/cvr;
		// 15
		instanceFieldRef byte[] EMVStaticData/theAFL;
		// 16
		instanceFieldRef byte[] EMVStaticData/fci;
		// 17
		instanceFieldRef byte[] EMVStaticData/record1;
		// 18
		instanceFieldRef byte[] EMVStaticData/record2;
		// 19
		instanceFieldRef byte[] EMVStaticData/record3;
		// 20
		instanceFieldRef byte[] SimpleEMVApplet/response;
		// 21
		instanceFieldRef 1.9 SimpleEMVApplet/pin;
		// 22
		instanceFieldRef 2.14 SimpleEMVApplet/randomData;
		// 23
		instanceFieldRef EMVCrypto SimpleEMVApplet/theCrypto;
		// 24
		virtualMethodRef 2.15.5([BSS[BS)S;		// sign([BSS[BS)S
		// 25
		staticMethodRef EMVCrypto/setSessionKey()V;
		// 26
		virtualMethodRef EMVCrypto/generateSecondACReponse(B[BS[BS[BS)V;
		// 27
		staticMethodRef EMVCrypto/computeAC(B[BS[BS)V;
		// 28
		staticMethodRef 2.13.0(BSZ)Ljavacard/security/Key;;		// javacard/security/KeyBuilder.buildKey(BSZ)Ljavacard/security/Key;
			.descriptor	Ljavacard/security/Key;	2.0;

		// 29
		.classRef 2.10;		// javacard/security/DESKey
		// 30
		staticMethodRef 3.1.0(BZ)Ljavacardx/crypto/Cipher;;		// javacardx/crypto/Cipher.getInstance(BZ)Ljavacardx/crypto/Cipher;
			.descriptor	Ljavacardx/crypto/Cipher;	3.1;

		// 31
		staticMethodRef 1.8.13(SB)[B;		// javacard/framework/JCSystem.makeTransientByteArray(SB)[B
		// 32
		staticMethodRef 2.15.0(BZ)Ljavacard/security/Signature;;		// javacard/security/Signature.getInstance(BZ)Ljavacard/security/Signature;
			.descriptor	Ljavacard/security/Signature;	2.15;

		// 33
		virtualMethodRef EMVProtocolState/setFirstACGenerated(B)V;
		// 34
		virtualMethodRef EMVProtocolState/setSecondACGenerated(B)V;
		// 35
		virtualMethodRef EMVProtocolState/setCVMPerformed(B)V;
		// 36
		staticMethodRef EMVProtocolState/increaseATC()V;
		// 37
		virtualMethodRef EMVProtocolState/getATC()S;
		// 38
		staticMethodRef 1.16.6([BSS)S;		// javacard/framework/Util.setShort([BSS)S
		// 39
		staticMethodRef 1.16.3([BSSB)S;		// javacard/framework/Util.arrayFillNonAtomic([BSSB)S
		// 40
		virtualMethodRef 3.1.3(Ljavacard/security/Key;B)V;		// init(Ljavacard/security/Key;B)V
			.descriptor	Ljavacard/security/Key;	2.0;

		// 41
		virtualMethodRef 3.1.1([BSS[BS)S;		// doFinal([BSS[BS)S
		// 42
		staticMethodRef 1.16.2([BS[BSS)S;		// javacard/framework/Util.arrayCopyNonAtomic([BS[BSS)S
		// 43
		staticMethodRef 1.7.1(S)V;		// javacard/framework/ISOException.throwIt(S)V
		// 44
		staticMethodRef 1.3.0()V;		// javacard/framework/Applet.<init>()V
		// 45
		staticMethodRef 1.16.1([BS[BSS)S;		// javacard/framework/Util.arrayCopy([BS[BSS)S
		// 46
		.classRef 1.9;		// javacard/framework/OwnerPIN
		// 47
		staticMethodRef 1.9.0(BB)V;		// javacard/framework/OwnerPIN.<init>(BB)V
		// 48
		staticMethodRef 0.0.0()V;		// java/lang/Object.<init>()V
		// 49
		virtualMethodRef 1.9.8([BSB)V;		// update([BSB)V
		// 50
		staticMethodRef 2.14.0(B)Ljavacard/security/RandomData;;		// javacard/security/RandomData.getInstance(B)Ljavacard/security/RandomData;
			.descriptor	Ljavacard/security/RandomData;	2.14;

		// 51
		virtualMethodRef EMVStaticData/getAIP()S;
		// 52
		.classRef EMVProtocolState;
		// 53
		staticMethodRef EMVProtocolState/<init>(Lapplet/SimpleEMVApplet;)V;
		// 54
		.classRef EMVStaticData;
		// 55
		staticMethodRef EMVStaticData/<init>()V;
		// 56
		.classRef EMVCrypto;
		// 57
		staticMethodRef EMVCrypto/<init>(Lapplet/SimpleEMVApplet;)V;
		// 58
		virtualMethodRef 2.15.3(Ljavacard/security/Key;B)V;		// init(Ljavacard/security/Key;B)V
			.descriptor	Ljavacard/security/Key;	2.0;

		// 59
		.classRef SimpleEMVApplet;
		// 60
		staticMethodRef SimpleEMVApplet/<init>()V;
		// 61
		virtualMethodRef 1.3.1()V;		// register()V
		// 62
		virtualMethodRef 1.10.1()[B;		// getBuffer()[B
		// 63
		virtualMethodRef 1.3.3()Z;		// selectingApplet()Z
		// 64
		virtualMethodRef EMVProtocolState/startNewSession()V;
		// 65
		virtualMethodRef 1.10.7()S;		// setOutgoing()S
		// 66
		virtualMethodRef EMVStaticData/getFCILength()S;
		// 67
		virtualMethodRef 1.10.9(S)V;		// setOutgoingLength(S)V
		// 68
		virtualMethodRef EMVStaticData/getFCI()[B;
		// 69
		virtualMethodRef 1.10.5([BSS)V;		// sendBytesLong([BSS)V
		// 70
		staticMethodRef SimpleEMVApplet/getChallenge(Ljavacard/framework/APDU;[B)V;
			.descriptor	Ljavacard/framework/APDU;	1.10;

		// 71
		staticMethodRef SimpleEMVApplet/readRecord(Ljavacard/framework/APDU;[B)V;
			.descriptor	Ljavacard/framework/APDU;	1.10;

		// 72
		staticMethodRef SimpleEMVApplet/getProcessingOptions(Ljavacard/framework/APDU;[B)V;
			.descriptor	Ljavacard/framework/APDU;	1.10;

		// 73
		staticMethodRef SimpleEMVApplet/getData(Ljavacard/framework/APDU;[B)V;
			.descriptor	Ljavacard/framework/APDU;	1.10;

		// 74
		staticMethodRef SimpleEMVApplet/verifyPIN(Ljavacard/framework/APDU;[B)V;
			.descriptor	Ljavacard/framework/APDU;	1.10;

		// 75
		virtualMethodRef 1.10.6()S;		// setIncomingAndReceive()S
		// 76
		virtualMethodRef EMVProtocolState/getFirstACGenerated()B;
		// 77
		virtualMethodRef SimpleEMVApplet/generateFirstAC(Ljavacard/framework/APDU;[B)V;
			.descriptor	Ljavacard/framework/APDU;	1.10;

		// 78
		virtualMethodRef EMVProtocolState/getSecondACGenerated()B;
		// 79
		virtualMethodRef SimpleEMVApplet/generateSecondAC(Ljavacard/framework/APDU;[B)V;
			.descriptor	Ljavacard/framework/APDU;	1.10;

		// 80
		virtualMethodRef 1.9.2()B;		// getTriesRemaining()B
		// 81
		virtualMethodRef 1.9.1([BSB)Z;		// check([BSB)Z
		// 82
		virtualMethodRef 1.10.8(SS)V;		// setOutgoingAndSend(SS)V
		// 83
		virtualMethodRef 2.14.1([BSS)V;		// generateData([BSS)V
		// 84
		virtualMethodRef EMVProtocolState/getLastOnlineATC()S;
		// 85
		virtualMethodRef EMVStaticData/readRecord([B[B)V;
		// 86
		virtualMethodRef EMVStaticData/getAFL()[B;
		// 87
		virtualMethodRef EMVStaticData/getCDOL1DataLength()S;
		// 88
		virtualMethodRef EMVCrypto/generateFirstACReponse(B[BS[BS[BS)V;
		// 89
		virtualMethodRef EMVStaticData/getCDOL2DataLength()S;
	}

	.interface public abstract EMVConstants 0 {

		.superInterfaces {
			1.0;		// javacard/framework/ISO7816
		}

		.fields {
			public static final byte INS_GENERATE_AC = -82;		// B
			public static final byte INS_GET_DATA = -54;		// B
			public static final byte INS_GET_PROCESSING_OPTIONS = -88;		// B
			public static final byte INS_INTERNAL_AUTHENTICATE = -120;		// B
			public static final byte INS_VERIFY = 32;		// B
			public static final byte INS_GET_CHALLENGE = -124;		// B
			public static final byte INS_READ_RECORD = -78;		// B
			public static final byte INS_APPLICATION_BLOCK = 30;		// B
			public static final byte INS_APPLICATION_UNBLOCK = 24;		// B
			public static final byte INS_CARD_BLOCK = 22;		// B
			public static final byte INS_PIN_CHANGE_UNBLOCK = 36;		// B
			public static final short SW_ISSUER_AUTHENTICATION_FAILED = 25344;		// S
			public static final byte PERSONALISATION = 0;		// B
			public static final byte READY = 1;		// B
			public static final byte BLOCKED = 2;		// B
			public static final byte ARQC_CODE = -128;		// B
			public static final byte TC_CODE = 64;		// B
			public static final byte AAC_CODE = 0;		// B
			public static final byte RFU_CODE = -64;		// B
			public static final byte NONE = 0;		// B
			public static final byte ARQC = 1;		// B
			public static final byte TC = 2;		// B
			public static final byte AAC = 3;		// B
			public static final byte PLAINTEXT_PIN = 1;		// B
			public static final byte ENCRYPTED_PIN = 2;		// B
		}

	}

	.class public EMVCrypto 1 extends 0.0 {		// extends java/lang/Object

		.fields {
			private final SimpleEMVApplet theApplet 0;		// Lapplet/SimpleEMVApplet;
			private final byte[] sessionkey 1;		// [B
			private final 2.10 mk 2;		// Ljavacard/security/DESKey;
			private final 3.1 desCipher 3;		// Ljavacardx/crypto/Cipher;
			private final 2.15 desMAC 4;		// Ljavacard/security/Signature;
			private final 2.10 sk 5;		// Ljavacard/security/DESKey;
			private final byte[] diversification_data 6;		// [B
			 byte[] transaction_data 7;		// [B
		}

		.publicMethodTable 1 {
			equals(Ljava/lang/Object;)Z;
			generateFirstACReponse(B[BS[BS[BS)V;
			generateSecondACReponse(B[BS[BS[BS)V;
		}

		.packageMethodTable 0 {
		}

		.implementedInterfaceInfoTable { 
			.interface 1.0 { 		// javacard/framework/ISO7816
			}

			.interface EMVConstants { 
			}

		}

		.method public <init>(Lapplet/SimpleEMVApplet;)V 0 {
			.stack 5;
			.locals 0;

				L0:	aload_0;
					invokespecial 48;		// java/lang/Object.<init>()V
					aload_0;
					aload_1;
					putfield_a 0;		// reference applet/EMVCrypto.theApplet
					aload_0;
					bspush 8;
					sconst_2;
					invokestatic 31;		// javacard/framework/JCSystem.makeTransientByteArray(SB)[B
					putfield_a 1;		// reference applet/EMVCrypto.diversification_data
					aload_0;
					bspush 16;
					sconst_2;
					invokestatic 31;		// javacard/framework/JCSystem.makeTransientByteArray(SB)[B
					putfield_a 2;		// reference applet/EMVCrypto.sessionkey
					aload_0;
					sspush 256;
					sconst_2;
					invokestatic 31;		// javacard/framework/JCSystem.makeTransientByteArray(SB)[B
					putfield_a 3;		// reference applet/EMVCrypto.transaction_data
					aload_0;
					sconst_3;
					sconst_0;
					invokestatic 30;		// javacardx/crypto/Cipher.getInstance(BZ)Ljavacardx/crypto/Cipher;
					putfield_a 4;		// reference applet/EMVCrypto.desCipher
					aload_0;
					bspush 6;
					sconst_0;
					invokestatic 32;		// javacard/security/Signature.getInstance(BZ)Ljavacard/security/Signature;
					putfield_a 5;		// reference applet/EMVCrypto.desMAC
					aload_0;
					sconst_3;
					sspush 128;
					sconst_0;
					invokestatic 28;		// javacard/security/KeyBuilder.buildKey(BSZ)Ljavacard/security/Key;
					checkcast 0 29;		// T_CLASSORINTERFACE javacard/security/DESKey
					putfield_a 6;		// reference applet/EMVCrypto.mk
					getfield_a_this 6;		// reference applet/EMVCrypto.mk
					bspush 16;
					newarray 11;
					dup;
					sconst_0;
					sconst_1;
					bastore;
					dup;
					sconst_1;
					sconst_2;
					bastore;
					dup;
					sconst_2;
					sconst_3;
					bastore;
					dup;
					sconst_3;
					sconst_4;
					bastore;
					dup;
					sconst_4;
					sconst_5;
					bastore;
					dup;
					sconst_5;
					bspush 6;
					bastore;
					dup;
					bspush 6;
					bspush 7;
					bastore;
					dup;
					bspush 7;
					bspush 8;
					bastore;
					dup;
					bspush 8;
					bspush 9;
					bastore;
					dup;
					bspush 9;
					bspush 16;
					bastore;
					dup;
					bspush 10;
					bspush 17;
					bastore;
					dup;
					bspush 11;
					bspush 18;
					bastore;
					dup;
					bspush 12;
					bspush 19;
					bastore;
					dup;
					bspush 13;
					bspush 20;
					bastore;
					dup;
					bspush 14;
					bspush 21;
					bastore;
					dup;
					bspush 15;
					bspush 22;
					bastore;
					sconst_0;
					invokeinterface 3 29 5;		// javacard/security/DESKey
					aload_0;
					sconst_3;
					sspush 128;
					sconst_0;
					invokestatic 28;		// javacard/security/KeyBuilder.buildKey(BSZ)Ljavacard/security/Key;
					checkcast 0 29;		// T_CLASSORINTERFACE javacard/security/DESKey
					putfield_a 7;		// reference applet/EMVCrypto.sk
					return;
		}

		.method private setSessionKey()V {
			.stack 6;
			.locals 0;

				L0:	getfield_a_this 1;		// reference applet/EMVCrypto.diversification_data
					sconst_0;
					getfield_a_this 0;		// reference applet/EMVCrypto.theApplet
					getfield_a 8;		// reference applet/SimpleEMVApplet.protocolState
					invokevirtual 37;		// getATC()S
					invokestatic 38;		// javacard/framework/Util.setShort([BSS)S
					pop;
					getfield_a_this 1;		// reference applet/EMVCrypto.diversification_data
					sconst_2;
					bspush 6;
					sconst_0;
					invokestatic 39;		// javacard/framework/Util.arrayFillNonAtomic([BSSB)S
					pop;
					getfield_a_this 4;		// reference applet/EMVCrypto.desCipher
					getfield_a_this 6;		// reference applet/EMVCrypto.mk
					sconst_2;
					invokevirtual 40;		// init(Ljavacard/security/Key;B)V
					getfield_a_this 1;		// reference applet/EMVCrypto.diversification_data
					sconst_2;
					bspush -16;
					bastore;
					getfield_a_this 4;		// reference applet/EMVCrypto.desCipher
					getfield_a_this 1;		// reference applet/EMVCrypto.diversification_data
					sconst_0;
					bspush 8;
					getfield_a_this 2;		// reference applet/EMVCrypto.sessionkey
					sconst_0;
					invokevirtual 41;		// doFinal([BSS[BS)S
					pop;
					getfield_a_this 1;		// reference applet/EMVCrypto.diversification_data
					sconst_2;
					bspush 15;
					bastore;
					getfield_a_this 4;		// reference applet/EMVCrypto.desCipher
					getfield_a_this 1;		// reference applet/EMVCrypto.diversification_data
					sconst_0;
					bspush 8;
					getfield_a_this 2;		// reference applet/EMVCrypto.sessionkey
					sconst_0;
					invokevirtual 41;		// doFinal([BSS[BS)S
					pop;
					getfield_a_this 7;		// reference applet/EMVCrypto.sk
					getfield_a_this 2;		// reference applet/EMVCrypto.sessionkey
					sconst_0;
					invokeinterface 3 29 5;		// javacard/security/DESKey
					return;
		}

		.method private computeAC(B[BS[BS)V {
			.stack 6;
			.locals 0;

				L0:	aload_2;
					sconst_5;
					getfield_a_this 3;		// reference applet/EMVCrypto.transaction_data
					sconst_0;
					sload_3;
					invokestatic 45;		// javacard/framework/Util.arrayCopy([BS[BSS)S
					pop;
					getfield_a_this 3;		// reference applet/EMVCrypto.transaction_data
					sload_3;
					getfield_a_this 0;		// reference applet/EMVCrypto.theApplet
					getfield_a 9;		// reference applet/SimpleEMVApplet.staticData
					invokevirtual 51;		// getAIP()S
					invokestatic 38;		// javacard/framework/Util.setShort([BSS)S
					pop;
					getfield_a_this 3;		// reference applet/EMVCrypto.transaction_data
					sload_3;
					sconst_2;
					sadd;
					getfield_a_this 0;		// reference applet/EMVCrypto.theApplet
					getfield_a 8;		// reference applet/SimpleEMVApplet.protocolState
					invokevirtual 37;		// getATC()S
					invokestatic 38;		// javacard/framework/Util.setShort([BSS)S
					pop;
					getfield_a_this 3;		// reference applet/EMVCrypto.transaction_data
					sload_3;
					sconst_4;
					sadd;
					bspush -128;
					bastore;
					getfield_a_this 3;		// reference applet/EMVCrypto.transaction_data
					sload_3;
					sconst_5;
					sadd;
					sconst_0;
					bastore;
					getfield_a_this 3;		// reference applet/EMVCrypto.transaction_data
					sload_3;
					bspush 6;
					sadd;
					sconst_0;
					bastore;
					getfield_a_this 5;		// reference applet/EMVCrypto.desMAC
					getfield_a_this 7;		// reference applet/EMVCrypto.sk
					sconst_1;
					invokevirtual 58;		// init(Ljavacard/security/Key;B)V
					getfield_a_this 5;		// reference applet/EMVCrypto.desMAC
					getfield_a_this 3;		// reference applet/EMVCrypto.transaction_data
					sconst_0;
					sload_3;
					bspush 7;
					sadd;
					aload 4;
					sload 5;
					invokevirtual 24;		// sign([BSS[BS)S
					pop;
					return;
		}

		.method public generateFirstACReponse(B[BS[BS[BS)V 1 {
			.stack 8;
			.locals 0;

				L0:	aload_0;
					invokespecial 25;		// applet/EMVCrypto.setSessionKey()V
					aload_0;
					sload_1;
					aload_2;
					sload_3;
					aload 4;
					sload 5;
					aload 6;
					sload 7;
					invokevirtual 26;		// generateSecondACReponse(B[BS[BS[BS)V
					return;
		}

		.method public generateSecondACReponse(B[BS[BS[BS)V 2 {
			.stack 7;
			.locals 0;

				L0:	aload 6;
					sload 7;
					bspush -128;
					bastore;
					aload 4;
					ifnonnull L2;
				L1:	aload 6;
					sload 7;
					sconst_1;
					sadd;
					bspush 11;
					bastore;
					goto L3;
				L2:	aload 6;
					sload 7;
					sconst_1;
					sadd;
					bspush 11;
					sload 5;
					sadd;
					s2b;
					bastore;
				L3:	aload 6;
					sload 7;
					sconst_2;
					sadd;
					sload_1;
					bastore;
					aload 6;
					sload 7;
					sconst_3;
					sadd;
					getfield_a_this 0;		// reference applet/EMVCrypto.theApplet
					getfield_a 8;		// reference applet/SimpleEMVApplet.protocolState
					invokevirtual 37;		// getATC()S
					invokestatic 38;		// javacard/framework/Util.setShort([BSS)S
					pop;
					aload_0;
					sload_1;
					aload_2;
					sload_3;
					aload 6;
					sload 7;
					sconst_5;
					sadd;
					invokespecial 27;		// applet/EMVCrypto.computeAC(B[BS[BS)V
					aload 4;
					ifnull L5;
				L4:	aload 4;
					sconst_0;
					aload 6;
					sload 7;
					bspush 13;
					sadd;
					bspush 18;
					invokestatic 45;		// javacard/framework/Util.arrayCopy([BS[BSS)S
					pop;
				L5:	aload 6;
					sload 7;
					sconst_1;
					sadd;
					bspush 29;
					bastore;
					aload 6;
					sload 7;
					bspush 13;
					sadd;
					bspush 18;
					sconst_0;
					invokestatic 39;		// javacard/framework/Util.arrayFillNonAtomic([BSSB)S
					pop;
					return;
		}

	}

	.class public EMVProtocolState 2 extends 0.0 {		// extends java/lang/Object

		.fields {
			private final SimpleEMVApplet theApplet 0;		// Lapplet/SimpleEMVApplet;
			private final byte[] volatileState 1;		// [B
			private final byte[] cvr 2;		// [B
			private short atc 3;		// S
			private short lastOnlineATC 4;		// S
		}

		.publicMethodTable 1 {
			equals(Ljava/lang/Object;)Z;
			getFirstACGenerated()B;
			setFirstACGenerated(B)V;
			getSecondACGenerated()B;
			setSecondACGenerated(B)V;
			getCVMPerformed()B;
			setCVMPerformed(B)V;
			getATC()S;
			getLastOnlineATC()S;
			startNewSession()V;
			onlineSessionCompleted()V;
			getCVR()[B;
		}

		.packageMethodTable 0 {
		}

		.implementedInterfaceInfoTable { 
			.interface 1.0 { 		// javacard/framework/ISO7816
			}

			.interface EMVConstants { 
			}

		}

		.method public getFirstACGenerated()B 1 {
			.stack 2;
			.locals 0;

				L0:	getfield_a_this 10;		// reference applet/EMVProtocolState.volatileState
					sconst_1;
					baload;
					sreturn;
		}

		.method public setFirstACGenerated(B)V 2 {
			.stack 3;
			.locals 0;

				L0:	getfield_a_this 10;		// reference applet/EMVProtocolState.volatileState
					sconst_1;
					sload_1;
					bastore;
					return;
		}

		.method public getSecondACGenerated()B 3 {
			.stack 2;
			.locals 0;

				L0:	getfield_a_this 10;		// reference applet/EMVProtocolState.volatileState
					sconst_2;
					baload;
					sreturn;
		}

		.method public setSecondACGenerated(B)V 4 {
			.stack 3;
			.locals 0;

				L0:	getfield_a_this 10;		// reference applet/EMVProtocolState.volatileState
					sconst_2;
					sload_1;
					bastore;
					return;
		}

		.method public getCVMPerformed()B 5 {
			.stack 2;
			.locals 0;

				L0:	getfield_a_this 10;		// reference applet/EMVProtocolState.volatileState
					sconst_0;
					baload;
					sreturn;
		}

		.method public setCVMPerformed(B)V 6 {
			.stack 3;
			.locals 0;

				L0:	getfield_a_this 10;		// reference applet/EMVProtocolState.volatileState
					sconst_0;
					sload_1;
					bastore;
					return;
		}

		.method public getATC()S 7 {
			.stack 1;
			.locals 0;

				L0:	getfield_s_this 11;		// short applet/EMVProtocolState.atc
					sreturn;
		}

		.method private increaseATC()V {
			.stack 3;
			.locals 0;

				L0:	aload_0;
					getfield_s_this 11;		// short applet/EMVProtocolState.atc
					sconst_1;
					sadd;
					putfield_s 11;		// short applet/EMVProtocolState.atc
					return;
		}

		.method public getLastOnlineATC()S 8 {
			.stack 1;
			.locals 0;

				L0:	getfield_s_this 12;		// short applet/EMVProtocolState.lastOnlineATC
					sreturn;
		}

		.method public <init>(Lapplet/SimpleEMVApplet;)V 0 {
			.stack 3;
			.locals 0;

				L0:	aload_0;
					invokespecial 48;		// java/lang/Object.<init>()V
					aload_0;
					aload_1;
					putfield_a 13;		// reference applet/EMVProtocolState.theApplet
					aload_0;
					sconst_3;
					sconst_2;
					invokestatic 31;		// javacard/framework/JCSystem.makeTransientByteArray(SB)[B
					putfield_a 10;		// reference applet/EMVProtocolState.volatileState
					aload_0;
					sconst_2;
					sconst_2;
					invokestatic 31;		// javacard/framework/JCSystem.makeTransientByteArray(SB)[B
					putfield_a 14;		// reference applet/EMVProtocolState.cvr
					return;
		}

		.method public startNewSession()V 9 {
			.stack 2;
			.locals 0;

				L0:	aload_0;
					sconst_0;
					invokevirtual 33;		// setFirstACGenerated(B)V
					aload_0;
					sconst_0;
					invokevirtual 34;		// setSecondACGenerated(B)V
					aload_0;
					sconst_0;
					invokevirtual 35;		// setCVMPerformed(B)V
					aload_0;
					invokespecial 36;		// applet/EMVProtocolState.increaseATC()V
					return;
		}

		.method public onlineSessionCompleted()V 10 {
			.stack 2;
			.locals 0;

				L0:	aload_0;
					getfield_s_this 11;		// short applet/EMVProtocolState.atc
					putfield_s 12;		// short applet/EMVProtocolState.lastOnlineATC
					return;
		}

		.method public getCVR()[B 11 {
			.stack 1;
			.locals 0;

				L0:	aconst_null;
					areturn;
		}

	}

	.class public EMVStaticData 3 extends 0.0 {		// extends java/lang/Object

		.fields {
			private final byte[] theAFL 0;		// [B
			private final byte[] fci 1;		// [B
			private final byte[] record1 2;		// [B
			private final byte[] record2 3;		// [B
			private final byte[] record3 4;		// [B
		}

		.publicMethodTable 1 {
			equals(Ljava/lang/Object;)Z;
			getAFL()[B;
			getAIP()S;
			getCDOL1DataLength()S;
			getCDOL2DataLength()S;
			getFCI()[B;
			getFCILength()S;
			readRecord([B[B)V;
		}

		.packageMethodTable 0 {
		}

		.implementedInterfaceInfoTable { 
			.interface 1.0 { 		// javacard/framework/ISO7816
			}

			.interface EMVConstants { 
			}

		}

		.method public <init>()V 0 {
			.stack 5;
			.locals 0;

				L0:	aload_0;
					invokespecial 48;		// java/lang/Object.<init>()V
					aload_0;
					sconst_4;
					newarray 11;
					dup;
					sconst_0;
					bspush 8;
					bastore;
					dup;
					sconst_1;
					sconst_1;
					bastore;
					dup;
					sconst_2;
					sconst_3;
					bastore;
					dup;
					sconst_3;
					sconst_1;
					bastore;
					putfield_a 15;		// reference applet/EMVStaticData.theAFL
					aload_0;
					bspush 39;
					newarray 11;
					dup;
					sconst_0;
					bspush 111;
					bastore;
					dup;
					sconst_1;
					bspush 37;
					bastore;
					dup;
					sconst_2;
					bspush -124;
					bastore;
					dup;
					sconst_3;
					bspush 7;
					bastore;
					dup;
					sconst_4;
					bspush -96;
					bastore;
					dup;
					sconst_5;
					sconst_0;
					bastore;
					dup;
					bspush 6;
					sconst_0;
					bastore;
					dup;
					bspush 7;
					sconst_0;
					bastore;
					dup;
					bspush 8;
					sconst_4;
					bastore;
					dup;
					bspush 9;
					bspush -128;
					bastore;
					dup;
					bspush 10;
					sconst_2;
					bastore;
					dup;
					bspush 11;
					bspush -91;
					bastore;
					dup;
					bspush 12;
					bspush 26;
					bastore;
					dup;
					bspush 13;
					bspush 80;
					bastore;
					dup;
					bspush 14;
					bspush 14;
					bastore;
					dup;
					bspush 15;
					bspush 83;
					bastore;
					dup;
					bspush 16;
					bspush 101;
					bastore;
					dup;
					bspush 17;
					bspush 99;
					bastore;
					dup;
					bspush 18;
					bspush 117;
					bastore;
					dup;
					bspush 19;
					bspush 114;
					bastore;
					dup;
					bspush 20;
					bspush 101;
					bastore;
					dup;
					bspush 21;
					bspush 67;
					bastore;
					dup;
					bspush 22;
					bspush 111;
					bastore;
					dup;
					bspush 23;
					bspush 100;
					bastore;
					dup;
					bspush 24;
					bspush 101;
					bastore;
					dup;
					bspush 25;
					bspush 32;
					bastore;
					dup;
					bspush 26;
					bspush 65;
					bastore;
					dup;
					bspush 27;
					bspush 117;
					bastore;
					dup;
					bspush 28;
					bspush 116;
					bastore;
					dup;
					bspush 29;
					bspush -121;
					bastore;
					dup;
					bspush 30;
					sconst_1;
					bastore;
					dup;
					bspush 31;
					sconst_0;
					bastore;
					dup;
					bspush 32;
					bspush 95;
					bastore;
					dup;
					bspush 33;
					bspush 45;
					bastore;
					dup;
					bspush 34;
					sconst_4;
					bastore;
					dup;
					bspush 35;
					bspush 110;
					bastore;
					dup;
					bspush 36;
					bspush 108;
					bastore;
					dup;
					bspush 37;
					bspush 101;
					bastore;
					dup;
					bspush 38;
					bspush 110;
					bastore;
					putfield_a 16;		// reference applet/EMVStaticData.fci
					aload_0;
					bspush 95;
					newarray 11;
					dup;
					sconst_0;
					bspush 112;
					bastore;
					dup;
					sconst_1;
					sconst_0;
					bastore;
					dup;
					sconst_2;
					bspush -116;
					bastore;
					dup;
					sconst_3;
					bspush 33;
					bastore;
					dup;
					sconst_4;
					bspush -97;
					bastore;
					dup;
					sconst_5;
					sconst_2;
					bastore;
					dup;
					bspush 6;
					bspush 6;
					bastore;
					dup;
					bspush 7;
					bspush -97;
					bastore;
					dup;
					bspush 8;
					sconst_3;
					bastore;
					dup;
					bspush 9;
					bspush 6;
					bastore;
					dup;
					bspush 10;
					bspush -97;
					bastore;
					dup;
					bspush 11;
					bspush 26;
					bastore;
					dup;
					bspush 12;
					sconst_2;
					bastore;
					dup;
					bspush 13;
					bspush -107;
					bastore;
					dup;
					bspush 14;
					sconst_5;
					bastore;
					dup;
					bspush 15;
					bspush 95;
					bastore;
					dup;
					bspush 16;
					bspush 42;
					bastore;
					dup;
					bspush 17;
					sconst_2;
					bastore;
					dup;
					bspush 18;
					bspush -102;
					bastore;
					dup;
					bspush 19;
					sconst_3;
					bastore;
					dup;
					bspush 20;
					bspush -100;
					bastore;
					dup;
					bspush 21;
					sconst_1;
					bastore;
					dup;
					bspush 22;
					bspush -97;
					bastore;
					dup;
					bspush 23;
					bspush 55;
					bastore;
					dup;
					bspush 24;
					sconst_4;
					bastore;
					dup;
					bspush 25;
					bspush -97;
					bastore;
					dup;
					bspush 26;
					bspush 53;
					bastore;
					dup;
					bspush 27;
					sconst_1;
					bastore;
					dup;
					bspush 28;
					bspush -97;
					bastore;
					dup;
					bspush 29;
					bspush 69;
					bastore;
					dup;
					bspush 30;
					sconst_2;
					bastore;
					dup;
					bspush 31;
					bspush -97;
					bastore;
					dup;
					bspush 32;
					bspush 76;
					bastore;
					dup;
					bspush 33;
					bspush 8;
					bastore;
					dup;
					bspush 34;
					bspush -97;
					bastore;
					dup;
					bspush 35;
					bspush 52;
					bastore;
					dup;
					bspush 36;
					sconst_3;
					bastore;
					dup;
					bspush 37;
					bspush -115;
					bastore;
					dup;
					bspush 38;
					bspush 12;
					bastore;
					dup;
					bspush 39;
					bspush -111;
					bastore;
					dup;
					bspush 40;
					bspush 10;
					bastore;
					dup;
					bspush 41;
					bspush -118;
					bastore;
					dup;
					bspush 42;
					sconst_2;
					bastore;
					dup;
					bspush 43;
					bspush -107;
					bastore;
					dup;
					bspush 44;
					sconst_5;
					bastore;
					dup;
					bspush 45;
					bspush -97;
					bastore;
					dup;
					bspush 46;
					bspush 55;
					bastore;
					dup;
					bspush 47;
					sconst_4;
					bastore;
					dup;
					bspush 48;
					bspush -97;
					bastore;
					dup;
					bspush 49;
					bspush 76;
					bastore;
					dup;
					bspush 50;
					bspush 8;
					bastore;
					dup;
					bspush 51;
					bspush 90;
					bastore;
					dup;
					bspush 52;
					sconst_5;
					bastore;
					dup;
					bspush 53;
					bspush 18;
					bastore;
					dup;
					bspush 54;
					bspush 52;
					bastore;
					dup;
					bspush 55;
					bspush 86;
					bastore;
					dup;
					bspush 56;
					bspush 120;
					bastore;
					dup;
					bspush 57;
					bspush -112;
					bastore;
					dup;
					bspush 58;
					bspush 95;
					bastore;
					dup;
					bspush 59;
					bspush 52;
					bastore;
					dup;
					bspush 60;
					sconst_1;
					bastore;
					dup;
					bspush 61;
					sconst_2;
					bastore;
					dup;
					bspush 62;
					bspush -114;
					bastore;
					dup;
					bspush 63;
					bspush 10;
					bastore;
					dup;
					bspush 64;
					sconst_0;
					bastore;
					dup;
					bspush 65;
					sconst_0;
					bastore;
					dup;
					bspush 66;
					sconst_0;
					bastore;
					dup;
					bspush 67;
					sconst_0;
					bastore;
					dup;
					bspush 68;
					sconst_0;
					bastore;
					dup;
					bspush 69;
					sconst_0;
					bastore;
					dup;
					bspush 70;
					sconst_0;
					bastore;
					dup;
					bspush 71;
					sconst_0;
					bastore;
					dup;
					bspush 72;
					sconst_1;
					bastore;
					dup;
					bspush 73;
					sconst_0;
					bastore;
					dup;
					bspush 74;
					bspush -97;
					bastore;
					dup;
					bspush 75;
					bspush 85;
					bastore;
					dup;
					bspush 76;
					sconst_1;
					bastore;
					dup;
					bspush 77;
					bspush -128;
					bastore;
					dup;
					bspush 78;
					bspush -97;
					bastore;
					dup;
					bspush 79;
					bspush 86;
					bastore;
					dup;
					bspush 80;
					bspush 12;
					bastore;
					dup;
					bspush 81;
					sconst_0;
					bastore;
					dup;
					bspush 82;
					sconst_0;
					bastore;
					dup;
					bspush 83;
					bspush 127;
					bastore;
					dup;
					bspush 84;
					sconst_m1;
					bastore;
					dup;
					bspush 85;
					sconst_m1;
					bastore;
					dup;
					bspush 86;
					bspush -32;
					bastore;
					dup;
					bspush 87;
					sconst_0;
					bastore;
					dup;
					bspush 88;
					sconst_0;
					bastore;
					dup;
					bspush 89;
					sconst_0;
					bastore;
					dup;
					bspush 90;
					sconst_0;
					bastore;
					dup;
					bspush 91;
					sconst_0;
					bastore;
					dup;
					bspush 92;
					sconst_0;
					bastore;
					dup;
					bspush 93;
					sconst_0;
					bastore;
					dup;
					bspush 94;
					sconst_0;
					bastore;
					putfield_a 17;		// reference applet/EMVStaticData.record1
					aload_0;
					bspush 11;
					newarray 11;
					dup;
					sconst_0;
					bspush 112;
					bastore;
					dup;
					sconst_1;
					sconst_0;
					bastore;
					dup;
					sconst_2;
					bspush -113;
					bastore;
					dup;
					sconst_3;
					sconst_0;
					bastore;
					dup;
					sconst_4;
					bspush -112;
					bastore;
					dup;
					sconst_5;
					sconst_0;
					bastore;
					dup;
					bspush 6;
					bspush -110;
					bastore;
					dup;
					bspush 7;
					sconst_0;
					bastore;
					dup;
					bspush 8;
					bspush -97;
					bastore;
					dup;
					bspush 9;
					bspush 50;
					bastore;
					dup;
					bspush 10;
					sconst_0;
					bastore;
					putfield_a 18;		// reference applet/EMVStaticData.record2
					aload_0;
					bspush 17;
					newarray 11;
					dup;
					sconst_0;
					bspush 112;
					bastore;
					dup;
					sconst_1;
					sconst_0;
					bastore;
					dup;
					sconst_2;
					bspush -97;
					bastore;
					dup;
					sconst_3;
					bspush 70;
					bastore;
					dup;
					sconst_4;
					sconst_0;
					bastore;
					dup;
					sconst_5;
					bspush -97;
					bastore;
					dup;
					bspush 6;
					bspush 71;
					bastore;
					dup;
					bspush 7;
					sconst_0;
					bastore;
					dup;
					bspush 8;
					bspush -97;
					bastore;
					dup;
					bspush 9;
					bspush 72;
					bastore;
					dup;
					bspush 10;
					sconst_0;
					bastore;
					dup;
					bspush 11;
					bspush -97;
					bastore;
					dup;
					bspush 12;
					bspush 73;
					bastore;
					dup;
					bspush 13;
					sconst_3;
					bastore;
					dup;
					bspush 14;
					bspush -97;
					bastore;
					dup;
					bspush 15;
					bspush 55;
					bastore;
					dup;
					bspush 16;
					sconst_4;
					bastore;
					putfield_a 19;		// reference applet/EMVStaticData.record3
					return;
		}

		.method public getAFL()[B 1 {
			.stack 1;
			.locals 0;

				L0:	getfield_a_this 15;		// reference applet/EMVStaticData.theAFL
					areturn;
		}

		.method public getAIP()S 2 {
			.stack 1;
			.locals 0;

				L0:	sspush 22528;
					sreturn;
		}

		.method public getCDOL1DataLength()S 3 {
			.stack 1;
			.locals 0;

				L0:	bspush 43;
					sreturn;
		}

		.method public getCDOL2DataLength()S 4 {
			.stack 1;
			.locals 0;

				L0:	bspush 29;
					sreturn;
		}

		.method public getFCI()[B 5 {
			.stack 1;
			.locals 0;

				L0:	getfield_a_this 16;		// reference applet/EMVStaticData.fci
					areturn;
		}

		.method public getFCILength()S 6 {
			.stack 1;
			.locals 0;

				L0:	getfield_a_this 16;		// reference applet/EMVStaticData.fci
					arraylength;
					sreturn;
		}

		.method public readRecord([B[B)V 7 {
			.stack 5;
			.locals 0;

				L0:	aload_1;
					sconst_3;
					baload;
					bspush 12;
					if_scmpne L3;
				L1:	aload_1;
					sconst_2;
					baload;
					sconst_1;
					if_scmpne L3;
				L2:	getfield_a_this 17;		// reference applet/EMVStaticData.record1
					sconst_0;
					aload_2;
					sconst_0;
					getfield_a_this 17;		// reference applet/EMVStaticData.record1
					arraylength;
					invokestatic 42;		// javacard/framework/Util.arrayCopyNonAtomic([BS[BSS)S
					pop;
					aload_2;
					sconst_1;
					getfield_a_this 17;		// reference applet/EMVStaticData.record1
					arraylength;
					sconst_2;
					ssub;
					s2b;
					bastore;
					goto L10;
				L3:	aload_1;
					sconst_3;
					baload;
					bspush 12;
					if_scmpne L6;
				L4:	aload_1;
					sconst_2;
					baload;
					sconst_2;
					if_scmpne L6;
				L5:	getfield_a_this 18;		// reference applet/EMVStaticData.record2
					sconst_0;
					aload_2;
					sconst_0;
					getfield_a_this 18;		// reference applet/EMVStaticData.record2
					arraylength;
					invokestatic 42;		// javacard/framework/Util.arrayCopyNonAtomic([BS[BSS)S
					pop;
					aload_2;
					sconst_1;
					getfield_a_this 18;		// reference applet/EMVStaticData.record2
					arraylength;
					sconst_2;
					ssub;
					s2b;
					bastore;
					goto L10;
				L6:	aload_1;
					sconst_3;
					baload;
					bspush 12;
					if_scmpne L9;
				L7:	aload_1;
					sconst_2;
					baload;
					sconst_3;
					if_scmpne L9;
				L8:	getfield_a_this 19;		// reference applet/EMVStaticData.record3
					sconst_0;
					aload_2;
					sconst_0;
					getfield_a_this 19;		// reference applet/EMVStaticData.record3
					arraylength;
					invokestatic 42;		// javacard/framework/Util.arrayCopyNonAtomic([BS[BSS)S
					pop;
					aload_2;
					sconst_1;
					getfield_a_this 19;		// reference applet/EMVStaticData.record3
					arraylength;
					sconst_2;
					ssub;
					s2b;
					bastore;
					goto L10;
				L9:	sspush 27266;
					invokestatic 43;		// javacard/framework/ISOException.throwIt(S)V
				L10:	return;
		}

	}

	.class public SimpleEMVApplet 4 extends 1.3 {		// extends javacard/framework/Applet

		.fields {
			final 1.9 pin 0;		// Ljavacard/framework/OwnerPIN;
			final 2.14 randomData 1;		// Ljavacard/security/RandomData;
			final EMVCrypto theCrypto 2;		// Lapplet/EMVCrypto;
			final EMVProtocolState protocolState 3;		// Lapplet/EMVProtocolState;
			final EMVStaticData staticData 4;		// Lapplet/EMVStaticData;
			private final byte[] response 5;		// [B
		}

		.publicMethodTable 7 {
			equals(Ljava/lang/Object;)Z;
			register()V;
			register([BSB)V;
			selectingApplet()Z;
			deselect()V;
			getShareableInterfaceObject(Ljavacard/framework/AID;B)Ljavacard/framework/Shareable;;
			select()Z;
			process(Ljavacard/framework/APDU;)V;
			generateFirstAC(Ljavacard/framework/APDU;[B)V;
			generateSecondAC(Ljavacard/framework/APDU;[B)V;
		}

		.packageMethodTable 0 {
		}

		.implementedInterfaceInfoTable { 
			.interface 1.0 { 		// javacard/framework/ISO7816
			}

			.interface EMVConstants { 
			}

		}

		.method private <init>()V {
			.stack 5;
			.locals 0;

				L0:	aload_0;
					invokespecial 44;		// javacard/framework/Applet.<init>()V
					aload_0;
					sspush 256;
					sconst_2;
					invokestatic 31;		// javacard/framework/JCSystem.makeTransientByteArray(SB)[B
					putfield_a 20;		// reference applet/SimpleEMVApplet.response
					aload_0;
					new 46;		// javacard/framework/OwnerPIN
					dup;
					sconst_3;
					sconst_2;
					invokespecial 47;		// javacard/framework/OwnerPIN.<init>(BB)V
					putfield_a 21;		// reference applet/SimpleEMVApplet.pin
					getfield_a_this 21;		// reference applet/SimpleEMVApplet.pin
					sconst_2;
					newarray 11;
					dup;
					sconst_0;
					bspush 18;
					bastore;
					dup;
					sconst_1;
					bspush 52;
					bastore;
					sconst_0;
					sconst_2;
					invokevirtual 49;		// update([BSB)V
					aload_0;
					sconst_1;
					invokestatic 50;		// javacard/security/RandomData.getInstance(B)Ljavacard/security/RandomData;
					putfield_a 22;		// reference applet/SimpleEMVApplet.randomData
					aload_0;
					new 52;		// applet/EMVProtocolState
					dup;
					aload_0;
					invokespecial 53;		// applet/EMVProtocolState.<init>(Lapplet/SimpleEMVApplet;)V
					putfield_a 8;		// reference applet/SimpleEMVApplet.protocolState
					aload_0;
					new 54;		// applet/EMVStaticData
					dup;
					invokespecial 55;		// applet/EMVStaticData.<init>()V
					putfield_a 9;		// reference applet/SimpleEMVApplet.staticData
					aload_0;
					new 56;		// applet/EMVCrypto
					dup;
					aload_0;
					invokespecial 57;		// applet/EMVCrypto.<init>(Lapplet/SimpleEMVApplet;)V
					putfield_a 23;		// reference applet/SimpleEMVApplet.theCrypto
					return;
		}

		.method public static install([BSB)V 0 {
			.stack 2;
			.locals 0;

				L0:	new 59;		// applet/SimpleEMVApplet
					dup;
					invokespecial 60;		// applet/SimpleEMVApplet.<init>()V
					invokevirtual 61;		// register()V
					return;
		}

		.method public process(Ljavacard/framework/APDU;)V 7 {
			.stack 4;
			.locals 4;

			.descriptor	Ljavacard/framework/APDU;	1.10;

				L0:	aload_1;
					invokevirtual 62;		// getBuffer()[B
					astore_2;
					aload_2;
					sconst_0;
					baload;
					sstore_3;
					aload_2;
					sconst_1;
					baload;
					sstore 4;
					aload_0;
					invokevirtual 63;		// selectingApplet()Z
					ifeq L2;
				L1:	getfield_a_this 8;		// reference applet/SimpleEMVApplet.protocolState
					invokevirtual 64;		// startNewSession()V
					aload_1;
					invokevirtual 65;		// setOutgoing()S
					pop;
					aload_1;
					getfield_a_this 9;		// reference applet/SimpleEMVApplet.staticData
					invokevirtual 66;		// getFCILength()S
					invokevirtual 67;		// setOutgoingLength(S)V
					aload_1;
					getfield_a_this 9;		// reference applet/SimpleEMVApplet.staticData
					invokevirtual 68;		// getFCI()[B
					sconst_0;
					getfield_a_this 9;		// reference applet/SimpleEMVApplet.staticData
					invokevirtual 66;		// getFCILength()S
					invokevirtual 69;		// sendBytesLong([BSS)V
					return;
				L2:	sload 4;
					slookupswitch L19 12 -126 L3 -124 L4 -120 L5 -88 L7 -82 L10 -78 L6 -54 L8 22 L19 24 L19 30 L19 32 L9 36 L19;
				L3:	goto_w L20;
				L4:	aload_0;
					aload_1;
					aload_2;
					invokespecial 70;		// applet/SimpleEMVApplet.getChallenge(Ljavacard/framework/APDU;[B)V
					goto L20;
				L5:	goto L20;
				L6:	aload_0;
					aload_1;
					aload_2;
					invokespecial 71;		// applet/SimpleEMVApplet.readRecord(Ljavacard/framework/APDU;[B)V
					goto L20;
				L7:	aload_0;
					aload_1;
					aload_2;
					invokespecial 72;		// applet/SimpleEMVApplet.getProcessingOptions(Ljavacard/framework/APDU;[B)V
					goto L20;
				L8:	aload_0;
					aload_1;
					aload_2;
					invokespecial 73;		// applet/SimpleEMVApplet.getData(Ljavacard/framework/APDU;[B)V
					goto L20;
				L9:	aload_0;
					aload_1;
					aload_2;
					invokespecial 74;		// applet/SimpleEMVApplet.verifyPIN(Ljavacard/framework/APDU;[B)V
					goto L20;
				L10:	aload_2;
					sconst_4;
					baload;
					sspush 255;
					sand;
					sstore 5;
					sload 5;
					aload_1;
					invokevirtual 75;		// setIncomingAndReceive()S
					if_scmpeq L12;
				L11:	sspush 26368;
					invokestatic 43;		// javacard/framework/ISOException.throwIt(S)V
				L12:	aload_2;
					sconst_2;
					baload;
					bspush 16;
					sand;
					bspush 16;
					if_scmpne L14;
				L13:	sspush 27392;
					invokestatic 43;		// javacard/framework/ISOException.throwIt(S)V
				L14:	getfield_a_this 8;		// reference applet/SimpleEMVApplet.protocolState
					invokevirtual 76;		// getFirstACGenerated()B
					ifne L16;
				L15:	aload_0;
					aload_1;
					aload_2;
					invokevirtual 77;		// generateFirstAC(Ljavacard/framework/APDU;[B)V
					goto L20;
				L16:	getfield_a_this 8;		// reference applet/SimpleEMVApplet.protocolState
					invokevirtual 78;		// getSecondACGenerated()B
					ifne L18;
				L17:	aload_0;
					aload_1;
					aload_2;
					invokevirtual 79;		// generateSecondAC(Ljavacard/framework/APDU;[B)V
					goto L20;
				L18:	sspush 27904;
					invokestatic 43;		// javacard/framework/ISOException.throwIt(S)V
					goto L20;
				L19:	sspush 27904;
					invokestatic 43;		// javacard/framework/ISOException.throwIt(S)V
				L20:	return;
		}

		.method private verifyPIN(Ljavacard/framework/APDU;[B)V {
			.stack 4;
			.locals 0;

			.descriptor	Ljavacard/framework/APDU;	1.10;

				L0:	aload_2;
					sconst_3;
					baload;
					bspush -128;
					if_scmpeq L2;
				L1:	sspush 27392;
					invokestatic 43;		// javacard/framework/ISOException.throwIt(S)V
				L2:	getfield_a_this 21;		// reference applet/SimpleEMVApplet.pin
					invokevirtual 80;		// getTriesRemaining()B
					ifne L4;
				L3:	sspush 27011;
					invokestatic 43;		// javacard/framework/ISOException.throwIt(S)V
					return;
				L4:	getfield_a_this 21;		// reference applet/SimpleEMVApplet.pin
					aload_2;
					bspush 6;
					sconst_2;
					invokevirtual 81;		// check([BSB)Z
					ifeq L6;
				L5:	getfield_a_this 8;		// reference applet/SimpleEMVApplet.protocolState
					sconst_1;
					invokevirtual 35;		// setCVMPerformed(B)V
					aload_1;
					sconst_0;
					sconst_0;
					invokevirtual 82;		// setOutgoingAndSend(SS)V
					goto L7;
				L6:	sspush 25536;
					getfield_a_this 21;		// reference applet/SimpleEMVApplet.pin
					invokevirtual 80;		// getTriesRemaining()B
					sadd;
					invokestatic 43;		// javacard/framework/ISOException.throwIt(S)V
				L7:	return;
		}

		.method private getChallenge(Ljavacard/framework/APDU;[B)V {
			.stack 4;
			.locals 0;

			.descriptor	Ljavacard/framework/APDU;	1.10;

				L0:	getfield_a_this 22;		// reference applet/SimpleEMVApplet.randomData
					aload_2;
					sconst_0;
					bspush 8;
					invokevirtual 83;		// generateData([BSS)V
					aload_1;
					sconst_0;
					bspush 8;
					invokevirtual 82;		// setOutgoingAndSend(SS)V
					return;
		}

		.method private getData(Ljavacard/framework/APDU;[B)V {
			.stack 4;
			.locals 0;

			.descriptor	Ljavacard/framework/APDU;	1.10;

				L0:	aload_2;
					sconst_2;
					baload;
					bspush -97;
					if_scmpne L6;
				L1:	aload_2;
					sconst_0;
					bspush -97;
					bastore;
					aload_2;
					sconst_1;
					aload_2;
					sconst_3;
					baload;
					bastore;
					aload_2;
					sconst_3;
					baload;
					slookupswitch L5 4 19 L4 23 L3 54 L2 79 L5;
				L2:	aload_2;
					sconst_4;
					sconst_2;
					bastore;
					aload_2;
					sconst_5;
					getfield_a_this 8;		// reference applet/SimpleEMVApplet.protocolState
					invokevirtual 37;		// getATC()S
					invokestatic 38;		// javacard/framework/Util.setShort([BSS)S
					pop;
					aload_1;
					sconst_2;
					sconst_5;
					invokevirtual 82;		// setOutgoingAndSend(SS)V
					goto L6;
				L3:	aload_2;
					sconst_4;
					sconst_1;
					bastore;
					aload_2;
					sconst_5;
					getfield_a_this 21;		// reference applet/SimpleEMVApplet.pin
					invokevirtual 80;		// getTriesRemaining()B
					bastore;
					aload_1;
					sconst_2;
					sconst_4;
					invokevirtual 82;		// setOutgoingAndSend(SS)V
					goto L6;
				L4:	aload_2;
					sconst_4;
					sconst_2;
					bastore;
					aload_2;
					sconst_5;
					getfield_a_this 8;		// reference applet/SimpleEMVApplet.protocolState
					invokevirtual 84;		// getLastOnlineATC()S
					invokestatic 38;		// javacard/framework/Util.setShort([BSS)S
					pop;
					aload_1;
					sconst_2;
					sconst_5;
					invokevirtual 82;		// setOutgoingAndSend(SS)V
					goto L6;
				L5:	sspush 27392;
					invokestatic 43;		// javacard/framework/ISOException.throwIt(S)V
				L6:	return;
		}

		.method private readRecord(Ljavacard/framework/APDU;[B)V {
			.stack 5;
			.locals 0;

			.descriptor	Ljavacard/framework/APDU;	1.10;

				L0:	getfield_a_this 9;		// reference applet/SimpleEMVApplet.staticData
					aload_2;
					getfield_a_this 20;		// reference applet/SimpleEMVApplet.response
					invokevirtual 85;		// readRecord([B[B)V
					aload_1;
					invokevirtual 65;		// setOutgoing()S
					pop;
					aload_1;
					getfield_a_this 20;		// reference applet/SimpleEMVApplet.response
					sconst_1;
					baload;
					sconst_2;
					sadd;
					invokevirtual 67;		// setOutgoingLength(S)V
					aload_1;
					getfield_a_this 20;		// reference applet/SimpleEMVApplet.response
					sconst_0;
					getfield_a_this 20;		// reference applet/SimpleEMVApplet.response
					sconst_1;
					baload;
					sconst_2;
					sadd;
					invokevirtual 69;		// sendBytesLong([BSS)V
					return;
		}

		.method private getProcessingOptions(Ljavacard/framework/APDU;[B)V {
			.stack 5;
			.locals 0;

			.descriptor	Ljavacard/framework/APDU;	1.10;

				L0:	getfield_a_this 20;		// reference applet/SimpleEMVApplet.response
					sconst_0;
					bspush -128;
					bastore;
					getfield_a_this 20;		// reference applet/SimpleEMVApplet.response
					sconst_1;
					bspush 6;
					bastore;
					getfield_a_this 20;		// reference applet/SimpleEMVApplet.response
					sconst_2;
					getfield_a_this 9;		// reference applet/SimpleEMVApplet.staticData
					invokevirtual 51;		// getAIP()S
					invokestatic 38;		// javacard/framework/Util.setShort([BSS)S
					pop;
					getfield_a_this 9;		// reference applet/SimpleEMVApplet.staticData
					invokevirtual 86;		// getAFL()[B
					sconst_0;
					getfield_a_this 20;		// reference applet/SimpleEMVApplet.response
					sconst_4;
					sconst_4;
					invokestatic 42;		// javacard/framework/Util.arrayCopyNonAtomic([BS[BSS)S
					pop;
					aload_1;
					invokevirtual 65;		// setOutgoing()S
					pop;
					aload_1;
					bspush 8;
					invokevirtual 67;		// setOutgoingLength(S)V
					aload_1;
					getfield_a_this 20;		// reference applet/SimpleEMVApplet.response
					sconst_0;
					bspush 8;
					invokevirtual 69;		// sendBytesLong([BSS)V
					return;
		}

		.method public generateFirstAC(Ljavacard/framework/APDU;[B)V 8 {
			.stack 8;
			.locals 1;

			.descriptor	Ljavacard/framework/APDU;	1.10;

				L0:	aload_2;
					sconst_2;
					baload;
					sspush 192;
					sand;
					s2b;
					sstore_3;
					sload_3;
					bspush -64;
					if_scmpeq L2;
				L1:	sload_3;
					ifne L3;
				L2:	sspush 27392;
					invokestatic 43;		// javacard/framework/ISOException.throwIt(S)V
				L3:	getfield_a_this 23;		// reference applet/SimpleEMVApplet.theCrypto
					sload_3;
					aload_2;
					getfield_a_this 9;		// reference applet/SimpleEMVApplet.staticData
					invokevirtual 87;		// getCDOL1DataLength()S
					aconst_null;
					sconst_0;
					getfield_a_this 20;		// reference applet/SimpleEMVApplet.response
					sconst_0;
					invokevirtual 88;		// generateFirstACReponse(B[BS[BS[BS)V
					getfield_a_this 8;		// reference applet/SimpleEMVApplet.protocolState
					sload_3;
					invokevirtual 33;		// setFirstACGenerated(B)V
					aload_1;
					invokevirtual 65;		// setOutgoing()S
					pop;
					aload_1;
					getfield_a_this 20;		// reference applet/SimpleEMVApplet.response
					sconst_1;
					baload;
					sconst_2;
					sadd;
					invokevirtual 67;		// setOutgoingLength(S)V
					aload_1;
					getfield_a_this 20;		// reference applet/SimpleEMVApplet.response
					sconst_0;
					getfield_a_this 20;		// reference applet/SimpleEMVApplet.response
					sconst_1;
					baload;
					sconst_2;
					sadd;
					invokevirtual 69;		// sendBytesLong([BSS)V
					return;
		}

		.method public generateSecondAC(Ljavacard/framework/APDU;[B)V 9 {
			.stack 8;
			.locals 1;

			.descriptor	Ljavacard/framework/APDU;	1.10;

				L0:	aload_2;
					sconst_2;
					baload;
					sspush 192;
					sand;
					s2b;
					sstore_3;
					sload_3;
					bspush -64;
					if_scmpeq L2;
				L1:	sload_3;
					bspush -128;
					if_scmpne L3;
				L2:	sspush 27392;
					invokestatic 43;		// javacard/framework/ISOException.throwIt(S)V
				L3:	getfield_a_this 23;		// reference applet/SimpleEMVApplet.theCrypto
					sload_3;
					aload_2;
					getfield_a_this 9;		// reference applet/SimpleEMVApplet.staticData
					invokevirtual 89;		// getCDOL2DataLength()S
					aconst_null;
					sconst_0;
					getfield_a_this 20;		// reference applet/SimpleEMVApplet.response
					sconst_0;
					invokevirtual 26;		// generateSecondACReponse(B[BS[BS[BS)V
					getfield_a_this 8;		// reference applet/SimpleEMVApplet.protocolState
					sload_3;
					invokevirtual 34;		// setSecondACGenerated(B)V
					aload_1;
					invokevirtual 65;		// setOutgoing()S
					pop;
					aload_1;
					getfield_a_this 20;		// reference applet/SimpleEMVApplet.response
					sconst_1;
					baload;
					sconst_2;
					sadd;
					invokevirtual 67;		// setOutgoingLength(S)V
					aload_1;
					getfield_a_this 20;		// reference applet/SimpleEMVApplet.response
					sconst_0;
					getfield_a_this 20;		// reference applet/SimpleEMVApplet.response
					sconst_1;
					baload;
					sconst_2;
					sadd;
					invokevirtual 69;		// sendBytesLong([BSS)V
					return;
		}

	}

}
